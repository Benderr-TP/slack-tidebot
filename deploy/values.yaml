secret:
  enabled: false
  data_:
    HUBOT_GITHUB_TOKEN: ""
    HUBOT_SLACK_TOKEN: ""
  spec:
    values:
      configmap:
        data_:
          HUBOT_GITHUB_EVENT_NOTIFIER_TYPES: "commit_comment,create,delete,deployment,deployment_status,issue_comment,issues,page_build,pull_request_review_comment,pull_request,push,repository,release,status,ping,pull_request_review"
          HUBOT_SLACK_ACCOUNT: "Tidepool"
          HUBOT_SLACK_ROOMS: "tidebot,github-events"
          inputToEnvironmentMap: |-
            {        
              "dev": "qa1",
              "int": "external",
              "integration": "external",
              "prd": "production",
              "prod": "production",
              "production": "production",
              "qa1": "qa1",
              "qa2": "qa2",
              "staging": "staging",
              "stg": "staging",
              "test": "integration-test"
            }
          inputToRepoMap: |-
            {
              "dev": "cluster-qa1",
              "int": "cluster-integration",
              "integration": "cluster-integration",
              "prd": "cluster-production",
              "prod": "cluster-production",
              "production": "cluster-production",
              "qa1": "cluster-qa1",
              "qa2": "cluster-qa2",
              "shared": "cluster-shared",
              "staging": "cluster-staging",
              "stg": "cluster-staging",
              "test": "integration-test"
            }
          serviceRepoToService: |-
            {
              "slack-tidebot": "tidebot"
            }
      deployment:
        podAnnotations: {}
        image: tidepool/slack-tidebot:master-5783cd86c2ed10f6f107047c6d60944e4cdadc6b
      resources: {}
      securityContext: {}
      hpa:
        enabled: false
ingress:
  certificate:
    secretName: tls
  service:
    http:
      enabled: false
    https:
      enabled: false
  gateway:
    http:
      dnsNames: []
    https:
      dnsNames: []
