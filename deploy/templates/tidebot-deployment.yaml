{{ with .Values.deployment }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: tidebot
    app.kubernetes.io/managed-by: {{ $.Release.Service }}
    app.kubernetes.io/name: tidebot
    app.kubernetes.io/instance: {{ $.Release.Name }}
  name: tidebot
  namespace: {{$.Release.Namespace}}
  annotations:
    secret.reloader.stakater.com/reload: "tidebot"
    configmap.reloader.stakater.com/reload: "tidebot"
spec:
  selector:
    matchLabels:
      app: tidebot
      app.kubernetes.io/name: tidebot
      app.kubernetes.io/instance: {{ $.Release.Name }}
  replicas: 1
  strategy: {}
  template:
    metadata:
      labels:
        app: tidebot
        app.kubernetes.io/name: tidebot
        app.kubernetes.io/instance: {{ $.Release.Name }}
{{ if .podAnnotations }}
      annotations:
        {{- .podAnnotations | toYaml | nindent 8 }}
{{- end }}
    spec:
      containers:
      - env:
        - name: HUBOT_CONCURRENT_REQUESTS
          value: "1"
        - name: HUBOT_GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: tidebot
              key: HUBOT_GITHUB_TOKEN
              optional: false
        - name: HUBOT_SLACK_TOKEN
          valueFrom:
            secretKeyRef:
              name: tidebot
              key: HUBOT_SLACK_TOKEN
              optional: false
        - name: HUBOT_GITHUB_EVENT_NOTIFIER_TYPES
          valueFrom:
            configMapKeyRef:
              name: tidebot
              key: HUBOT_GITHUB_EVENT_NOTIFIER_TYPES
              optional: false
        - name: HUBOT_SLACK_ACCOUNT
          valueFrom:
            configMapKeyRef:
              name: tidebot
              key: HUBOT_SLACK_ACCOUNT
              optional: false
        - name: HUBOT_SLACK_ROOMS
          valueFrom:
            configMapKeyRef:
              name: tidebot
              key: HUBOT_SLACK_ROOMS
              optional: false
        - name: inputToRepoMap
          valueFrom:
            configMapKeyRef:
              name: tidebot
              key: inputToRepoMap
              optional: false
        - name: inputToNamespaceMap
          valueFrom:
            configMapKeyRef:
              name: tidebot
              key: inputToNamespaceMap
              optional: false
        - name: serviceRepoToPackage
          valueFrom:
            configMapKeyRef:
              name: tidebot
              key: serviceRepoToPackage
              optional: false
        image: "{{ .image }}"
        livenessProbe:
          httpGet:
            path: /status
            port: 8080
          initialDelaySeconds: 3
          periodSeconds: 10
        name: tidebot
        ports:
        - containerPort: 8080
        resources:
          {{- toYaml .resources | nindent 10 }}
        securityContext:
          {{- toYaml .securityContext | nindent 10 }}
      restartPolicy: Always
{{ end }}
